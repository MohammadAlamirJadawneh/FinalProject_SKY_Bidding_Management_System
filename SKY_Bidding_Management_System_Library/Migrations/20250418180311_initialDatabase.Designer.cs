// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SKY_Bidding_Management_System_Library.Data;

#nullable disable

namespace SKY_Bidding_Management_System_Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250418180311_initialDatabase")]
    partial class initialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "role-admin-id",
                            ConcurrencyStamp = "static-security-stamp-001",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "role-user-id",
                            ConcurrencyStamp = "static-security-stamp-001",
                            Name = "User",
                            NormalizedName = "USER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.Bid", b =>
                {
                    b.Property<int>("BidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BidderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SubmissionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TechnicalSummary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("BidId");

                    b.HasIndex("BidderId");

                    b.HasIndex("TenderId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.BidDocument", b =>
                {
                    b.Property<int>("BidDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidDocumentId"));

                    b.Property<string>("BidDocumentContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("BidDocumentData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("BidDocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BidDocumentUploadedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.HasKey("BidDocumentId");

                    b.HasIndex("BidId");

                    b.ToTable("BidDocuments");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.BidEvaluation", b =>
                {
                    b.Property<int>("BidEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BidEvaluationId"));

                    b.Property<string>("BidEvaluationNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BidEvaluationScore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EvaluatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("BidEvaluationId");

                    b.HasIndex("BidId");

                    b.ToTable("BidEvaluations");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.EligibilityCriteria", b =>
                {
                    b.Property<int>("EligibilityCriteriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EligibilityCriteriaId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("EligibilityCriteriaId");

                    b.ToTable("EligibilityCriterias");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.FinancialProposalItem", b =>
                {
                    b.Property<int>("FinancialProposalItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FinancialProposalItemId"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FinancialProposalItemId");

                    b.HasIndex("BidId");

                    b.ToTable("FinancialProposalItems");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.PaymentTerm", b =>
                {
                    b.Property<int>("PaymentTermId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTermId"));

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentSchedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PenaltiesForDelays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentTermId");

                    b.ToTable("PaymentTerms");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.SubmissionGuideline", b =>
                {
                    b.Property<int>("SubmissionGuidelineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionGuidelineId"));

                    b.Property<string>("CompanyProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinancialProposal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TechnicalProposal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("SubmissionGuidelineId");

                    b.HasIndex("TenderId");

                    b.ToTable("SubmissionGuidelines");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.SupportingDocument", b =>
                {
                    b.Property<int>("SupportingDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupportingDocumentId"));

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SupportingDocumentId");

                    b.HasIndex("BidId");

                    b.ToTable("SupportingDocuments");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.Tender", b =>
                {
                    b.Property<int>("TenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("EligibilityCriteria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndustryId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<decimal>("TenderBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("TenderClosingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenderDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TenderIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenderIssuedBy")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TenderStatus")
                        .HasColumnType("int");

                    b.Property<string>("TenderTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenderTypeId")
                        .HasColumnType("int");

                    b.HasKey("TenderId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("IndustryId");

                    b.HasIndex("LocationId");

                    b.HasIndex("TenderIssuedBy");

                    b.HasIndex("TenderTypeId");

                    b.ToTable("Tenders");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderAward", b =>
                {
                    b.Property<int>("TenderAwardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderAwardId"));

                    b.Property<DateTime>("AwardDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("AwardStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BidId")
                        .HasColumnType("int");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("TenderAwardId");

                    b.HasIndex("BidId");

                    b.HasIndex("TenderId");

                    b.ToTable("TenderAwards");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderCategory", b =>
                {
                    b.Property<int>("TenderCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderCategoryId"));

                    b.Property<string>("TenderCategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenderCategoryId");

                    b.ToTable("TenderCategories");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderDocument", b =>
                {
                    b.Property<int>("TenderDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderDocumentId"));

                    b.Property<string>("DocumentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenderDocumentContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("TenderDocumentData")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("TenderDocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TenderDocumentUploadedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("TenderDocumentId");

                    b.HasIndex("TenderId");

                    b.ToTable("TenderDocuments");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderEligibility", b =>
                {
                    b.Property<int>("TenderEligibilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderEligibilityId"));

                    b.Property<bool>("CompliesWithIndustryStandards")
                        .HasColumnType("bit");

                    b.Property<bool>("HasMinimumExperience")
                        .HasColumnType("bit");

                    b.Property<bool>("HasPastExperience")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFinanciallyStable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRegisteredCompany")
                        .HasColumnType("bit");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("TenderEligibilityId");

                    b.HasIndex("TenderId");

                    b.ToTable("TenderEligibilities");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderEvaluation", b =>
                {
                    b.Property<int>("TenderEvaluationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderEvaluationId"));

                    b.Property<decimal>("ScoreTenderEvaluation")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TenderEvaluationNotes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TenderId")
                        .HasColumnType("int");

                    b.HasKey("TenderEvaluationId");

                    b.HasIndex("TenderId");

                    b.ToTable("TenderEvaluations");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderIndustry", b =>
                {
                    b.Property<int>("TenderIndustryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderIndustryId"));

                    b.Property<string>("TenderIndustryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenderIndustryId");

                    b.ToTable("TenderIndustries");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderLocation", b =>
                {
                    b.Property<int>("TenderLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderLocationId"));

                    b.Property<string>("TenderLocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenderLocationId");

                    b.ToTable("TenderLocations");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderType", b =>
                {
                    b.Property<int>("TenderTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TenderTypeId"));

                    b.Property<string>("TenderTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TenderTypeId");

                    b.ToTable("TenderTypes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.Bid", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.AppUser", "Bidder")
                        .WithMany()
                        .HasForeignKey("BidderId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Tender", "Tender")
                        .WithMany()
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bidder");

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.BidDocument", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Bid", "Bid")
                        .WithMany("BidDocument")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.BidEvaluation", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Bid", "Bid")
                        .WithMany()
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.FinancialProposalItem", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Bid", "Bid")
                        .WithMany("FinancialProposalItems")
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.SubmissionGuideline", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Tender", "Tender")
                        .WithMany("SubmissionGuidelines")
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.SupportingDocument", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Bid", "Bid")
                        .WithMany()
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bid");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.Tender", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.TenderCategory", "TenderCategory")
                        .WithMany("Tenders")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.TenderIndustry", "TenderIndustry")
                        .WithMany("Tenders")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.TenderLocation", "TenderLocation")
                        .WithMany("Tenders")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.AppUser", "TenderUser")
                        .WithMany()
                        .HasForeignKey("TenderIssuedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.TenderType", "TenderType")
                        .WithMany("Tenders")
                        .HasForeignKey("TenderTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TenderCategory");

                    b.Navigation("TenderIndustry");

                    b.Navigation("TenderLocation");

                    b.Navigation("TenderType");

                    b.Navigation("TenderUser");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderAward", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Bid", "Bid")
                        .WithMany()
                        .HasForeignKey("BidId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Tender", "Tender")
                        .WithMany()
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bid");

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderDocument", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Tender", "Tender")
                        .WithMany("TenderDocument")
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderEligibility", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Tender", "Tender")
                        .WithMany()
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderEvaluation", b =>
                {
                    b.HasOne("SKY_Bidding_Management_System_Library.Data.Models.Tender", "Tender")
                        .WithMany("TenderEvaluations")
                        .HasForeignKey("TenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Tender");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.Bid", b =>
                {
                    b.Navigation("BidDocument");

                    b.Navigation("FinancialProposalItems");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.Tender", b =>
                {
                    b.Navigation("SubmissionGuidelines");

                    b.Navigation("TenderDocument");

                    b.Navigation("TenderEvaluations");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderCategory", b =>
                {
                    b.Navigation("Tenders");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderIndustry", b =>
                {
                    b.Navigation("Tenders");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderLocation", b =>
                {
                    b.Navigation("Tenders");
                });

            modelBuilder.Entity("SKY_Bidding_Management_System_Library.Data.Models.TenderType", b =>
                {
                    b.Navigation("Tenders");
                });
#pragma warning restore 612, 618
        }
    }
}
